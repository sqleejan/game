{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/auth/token": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "create token",
                "operationId": "AuthController.Token",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The object content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TmpClaims"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} token"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/auth/user/create": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "临时创建用户",
                "operationId": "AuthController.临时创建用户",
                "parameters": [
                    {
                        "in": "query",
                        "name": "uid",
                        "description": "The uid for user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nicname",
                        "description": "The nicname for user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} set success"
                    },
                    "403": {
                        "description": "uid is null"
                    }
                }
            }
        },
        "/cattle/create": {
            "post": {
                "tags": [
                    "cattle"
                ],
                "description": "set rancher",
                "operationId": "CattleController.起庄",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The token for user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "roomid",
                        "description": "The roomid for rancher",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for rancher",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RedReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} success"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/cattle/gain": {
            "get": {
                "tags": [
                    "cattle"
                ],
                "description": "gain cattle",
                "operationId": "CattleController.Gain cattle",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The token for user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "roomid",
                        "description": "The roomid for cattle",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} score number"
                    },
                    "403": {
                        "description": "query is empty"
                    }
                }
            }
        },
        "/cattle/master": {
            "post": {
                "tags": [
                    "cattle"
                ],
                "description": "fetch rancher",
                "operationId": "CattleController.抢庄",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The token for user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "roomid",
                        "description": "The roomid for rancher",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} success"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/cattle/send": {
            "get": {
                "tags": [
                    "cattle"
                ],
                "description": "Distribute cattle",
                "operationId": "CattleController.Distribute",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The token for user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "roomid",
                        "description": "The roomid for cattle",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{body} models.Marks"
                    },
                    "403": {
                        "description": "query is empty"
                    }
                }
            }
        },
        "/room/": {
            "post": {
                "tags": [
                    "room"
                ],
                "description": "create room",
                "operationId": "RoomController.CreateRoom",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for room content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RoomReq"
                        }
                    },
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The token for user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TmpRespone"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/room/list": {
            "get": {
                "tags": [
                    "room"
                ],
                "description": "get all Rooms",
                "operationId": "RoomController.GetAll",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The token for user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TmpRespone"
                        }
                    }
                }
            }
        },
        "/room/listdb": {
            "get": {
                "tags": [
                    "room"
                ],
                "description": "get room Listdb",
                "operationId": "RoomController.Listdb",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The token for user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The default is 20",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The default is 1",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} success"
                    }
                }
            }
        },
        "/room/{roomid}": {
            "get": {
                "tags": [
                    "room"
                ],
                "description": "get user by roomid",
                "operationId": "RoomController.Get",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The token for user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "roomid",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.TmpRespone"
                        }
                    },
                    "403": {
                        "description": ":roomid is empty"
                    }
                }
            }
        },
        "/room/{roomid}/bill": {
            "get": {
                "tags": [
                    "room"
                ],
                "description": "get bill for roomid",
                "operationId": "RoomController.Bill",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The token for user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The default is 20",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "The default is 1",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "roomid",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} success"
                    },
                    "403": {
                        "description": ":roomid is empty"
                    }
                }
            }
        },
        "/user/assistant": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "Set Assistant",
                "operationId": "UserController.Set Assistant",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The token for user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "roomid",
                        "description": "The roomid for user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "uid",
                        "description": "The uid for user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} set success"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/user/join": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "Join Room",
                "operationId": "UserController.Join Room",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The token for user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "roomid",
                        "description": "The roomid for user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} token"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/user/list": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Get Users",
                "operationId": "UserController.玩家列表",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The token for user",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "roomid",
                        "description": "The roomid for user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} set success"
                    },
                    "403": {
                        "description": "uid is null"
                    }
                }
            }
        },
        "/user/self": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Get Self",
                "operationId": "UserController.Self",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "description": "The token for user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/auth.MyCustomClaims"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        ".StandardClaims": {
            "type": "object"
        },
        "auth.MyCustomClaims": {
            "title": "MyCustomClaims",
            "type": "object"
        },
        "models.Object": {
            "title": "Object",
            "type": "object",
            "properties": {
                "ObjectId": {
                    "type": "string"
                },
                "PlayerName": {
                    "type": "string"
                },
                "Score": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.RedReq": {
            "title": "RedReq",
            "type": "object",
            "properties": {
                "Base": {
                    "type": "integer",
                    "format": "int64"
                },
                "Diver": {
                    "type": "integer",
                    "format": "int64"
                },
                "Master": {
                    "type": "string"
                },
                "Number": {
                    "type": "integer",
                    "format": "int64"
                },
                "Timeout": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.RoomReq": {
            "title": "RoomReq",
            "type": "object",
            "properties": {
                "Duration": {
                    "type": "integer",
                    "format": "int64"
                },
                "RoomName": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                },
                "UserLimit": {
                    "type": "integer",
                    "format": "int64"
                },
                "Water": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.TmpClaims": {
            "title": "TmpClaims",
            "type": "object",
            "properties": {
                "aud": {
                    "type": "string"
                },
                "exp": {
                    "type": "integer",
                    "format": "int64"
                },
                "iat": {
                    "type": "integer",
                    "format": "int64"
                },
                "iss": {
                    "type": "string"
                },
                "jti": {
                    "type": "string"
                },
                "nbf": {
                    "type": "integer",
                    "format": "int64"
                },
                "sub": {
                    "type": "string"
                }
            }
        },
        "models.TmpRespone": {
            "title": "TmpRespone",
            "type": "object",
            "properties": {
                "Active": {
                    "type": "boolean"
                },
                "Admin": {
                    "type": "string"
                },
                "EndTime": {
                    "type": "string",
                    "format": "string"
                },
                "LenUser": {
                    "type": "integer",
                    "format": "int64"
                },
                "RoomId": {
                    "type": "string"
                },
                "RoomName": {
                    "type": "string"
                },
                "StartTime": {
                    "type": "string",
                    "format": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "auth",
            "description": "Operations about auth\n"
        },
        {
            "name": "room",
            "description": "Operations about Rooms\n"
        },
        {
            "name": "user",
            "description": "Operations about Users\n"
        },
        {
            "name": "cattle",
            "description": "Operations about Cattle\n"
        }
    ]
}